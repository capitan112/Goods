//
//  ProductTableWorkerTests.swift
//  GoustoTest
//
//  Created by Oleksiy Chebotarov on 22.01.2018.
//  Copyright (c) 2018 OleksiyCheborarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import GoustoTest
import XCTest

class ProductTableWorkerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: ProductTableInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupProductTableInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupProductTableInteractor() {
        sut = ProductTableInteractor()
    }
    
    // MARK: Test doubles
    
    class ProductTableWorkerSpy: ProductTableWorker {
        var isLoadData = false
        var isPopulateData = false
        
        override func loadData(success: @escaping (_ result: Bool) -> Void) {
            isLoadData = true
        }
        
        override func populateData() -> [Goods] {
            isPopulateData = true
            return [Goods]()
        }
    }
    
    // MARK: Tests
    func testPopulateData() {
        // Given
        let spy = ProductTableWorkerSpy()
        sut.worker = spy
        
        // When
        sut.populateData()
        
        // Then
        XCTAssertTrue(spy.isPopulateData, "populateData() should ask the presenter to format the result")
    }
    
    func testLoadData() {
        // Given
        let spy = ProductTableWorkerSpy()
        sut.worker = spy
        
        // When
        let request = ProductTable.LoadData.Request()
        sut.loadData(request: request)
        
        // Then
        XCTAssertTrue(spy.isLoadData, "loadData(request:) should ask the presenter to format the result")
    }
}
