//
//  ProductTableInteractorTests.swift
//  GoustoTest
//
//  Created by Oleksiy Chebotarov on 22.01.2018.
//  Copyright (c) 2018 OleksiyCheborarov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import GoustoTest
import XCTest

class ProductTableInteractorTests: XCTestCase {
  // MARK: Subject under test
  
  var sut: ProductTableInteractor!
  
  // MARK: Test lifecycle
  
    override func setUp() {
        super.setUp()
        setupProductTableInteractor()
    }
  
    override func tearDown() {
        super.tearDown()
    }
  
  // MARK: Test setup
  
    func setupProductTableInteractor() {
        sut = ProductTableInteractor()
    }
  
  // MARK: Test doubles
  
    class ProductTablePresentationLogicSpy: ProductTablePresentationLogic {
        var isLoadingComplete = false
        var isFilterCategory = false
        
        func loadingComplete(response: ProductTable.LoadData.Response) {
            isLoadingComplete = true
        }
        
        func filterCategory(response: ProductTable.FilterCategory.Response) {
            isFilterCategory = true
        }
  }
  
  // MARK: Tests
  
    func testLoadingComplete() {
        // Given
        let spy = ProductTablePresentationLogicSpy()
        sut.presenter = spy

        // When
        sut.populateData()

        // Then
        XCTAssertTrue(spy.isLoadingComplete, "loadData(request:) should ask the presenter to format the result")
    }

    func testFilterCategory() {
        // Given
        let spy = ProductTablePresentationLogicSpy()
        sut.presenter = spy
        let request = ProductTable.FilterCategory.Request(filterText: "text")

        // When
        sut.filterCategory(request: request)
        
        // Then
        XCTAssertTrue(spy.isFilterCategory, "filterCategory(request:) should ask the presenter to format the result")
    }
}
